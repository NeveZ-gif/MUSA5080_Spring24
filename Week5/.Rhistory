st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E,
MedRent = B25058_001E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(area_sqFt = as.numeric(st_area(.)),
area_sqmi = area_sqFt * 0.000000000035870)
tracts17 <- tracts17 %>%
mutate(pop_density = (TotalPop/area_sqmi))
ggplot()+
geom_sf(data = tracts17, aes(fill = pop_density))+
geom_sf(data = uga, fill = "transparent", color = "black", linetype=5, lwd=0.5)+
scale_fill_distiller(palette = "Reds", direction = 1)+
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
breaks_quantiles <- classIntervals(tracts17$pop_density, n = 5, style = "quantile")
colors <- brewer.pal(n = 5, name = "YlGnBu")
labels <- paste0(formatC(breaks_quantiles$brks[-length(breaks_quantiles$brks)], format = "f", digits = 1, big.mark = ","),
" - ",
formatC(breaks_quantiles$brks[-1], format = "f", digits = 1, big.mark = ","))
# Create improved map with custom range labels for legend
map_improved2 <- ggplot() +
geom_sf(data = tracts17, aes(fill = cut(pop_density, breaks = breaks_quantiles$brks, include.lowest = TRUE)), color = "transparent") +
scale_fill_manual(values = colors,
name = "Population Density (thousands/sqmi)",
labels = labels) +  # Use custom range labels
geom_sf(data = uga, fill = NA, color = "black", linetype = 1, lwd = 0.5) +  # Use NA for fill to make the boundaries transparent
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
# Display the map
map_improved2
tracts17 <- tracts17 %>%
mutate(pop_density = (TotalPop/area_sqmi))
ggplot()+
geom_sf(data = tracts17, aes(fill = pop_density))+
geom_sf(data = uga, fill = "transparent", color = "black", linetype=5, lwd=0.5)+
scale_fill_distiller(palette = "Reds", direction = 1)+
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
breaks_quantiles <- classIntervals(tracts17$pop_density, n = 5, style = "quantile")
colors <- brewer.pal(n = 5, name = "YlGnBu")
labels <- paste0(formatC(breaks_quantiles$brks[-length(breaks_quantiles$brks)], format = "f", digits = 1, big.mark = ","),
" - ",
formatC(breaks_quantiles$brks[-1], format = "f", digits = 1, big.mark = ","))
# Create improved map with custom range labels for legend
map_improved2 <- ggplot() +
geom_sf(data = tracts17, aes(fill = cut(pop_density, breaks = breaks_quantiles$brks, include.lowest = TRUE)), color = "transparent") +
scale_fill_manual(values = colors,
name = "Population Density (sqmi)",
labels = labels) +  # Use custom range labels
geom_sf(data = uga, fill = NA, color = "black", linetype = 1, lwd = 0.5) +  # Use NA for fill to make the boundaries transparent
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
# Display the map
map_improved2
```{r getcensus}
0.000000000035870 * 27878400
tracts17 <-
get_acs(geography = "tract", variables = c("B25026_001E","B25058_001E"),
year=2017, state=42, county="Lancaster", geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E,
MedRent = B25058_001E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(area_sqFt = as.numeric(st_area(.)),
area_sqmi = area_sqFt * 0.00000003587006)
0.00000003587006 * 27878400
tracts17 <- tracts17 %>%
mutate(pop_density = (TotalPop/area_sqmi))
ggplot()+
geom_sf(data = tracts17, aes(fill = pop_density))+
geom_sf(data = uga, fill = "transparent", color = "black", linetype=5, lwd=0.5)+
scale_fill_distiller(palette = "Reds", direction = 1)+
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
breaks_quantiles <- classIntervals(tracts17$pop_density, n = 5, style = "quantile")
colors <- brewer.pal(n = 5, name = "YlGnBu")
labels <- paste0(formatC(breaks_quantiles$brks[-length(breaks_quantiles$brks)], format = "f", digits = 1, big.mark = ","),
" - ",
formatC(breaks_quantiles$brks[-1], format = "f", digits = 1, big.mark = ","))
# Create improved map with custom range labels for legend
map_improved2 <- ggplot() +
geom_sf(data = tracts17, aes(fill = cut(pop_density, breaks = breaks_quantiles$brks, include.lowest = TRUE)), color = "transparent") +
scale_fill_manual(values = colors,
name = "Population Density (sqmi)",
labels = labels) +  # Use custom range labels
geom_sf(data = uga, fill = NA, color = "black", linetype = 1, lwd = 0.5) +  # Use NA for fill to make the boundaries transparent
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
# Display the map
map_improved2
tracts17 <- tracts17 %>%
mutate(pop_density = (TotalPop/(area_sqft/27878400)))
tracts17 <- tracts17 %>%
mutate(pop_density = (TotalPop/(area_sqFt/27878400)))
ggplot()+
geom_sf(data = tracts17, aes(fill = pop_density))+
geom_sf(data = uga, fill = "transparent", color = "black", linetype=5, lwd=0.5)+
scale_fill_distiller(palette = "Reds", direction = 1)+
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
breaks_quantiles <- classIntervals(tracts17$pop_density, n = 5, style = "quantile")
colors <- brewer.pal(n = 5, name = "YlGnBu")
labels <- paste0(formatC(breaks_quantiles$brks[-length(breaks_quantiles$brks)], format = "f", digits = 1, big.mark = ","),
" - ",
formatC(breaks_quantiles$brks[-1], format = "f", digits = 1, big.mark = ","))
# Create improved map with custom range labels for legend
map_improved2 <- ggplot() +
geom_sf(data = tracts17, aes(fill = cut(pop_density, breaks = breaks_quantiles$brks, include.lowest = TRUE)), color = "transparent") +
scale_fill_manual(values = colors,
name = "Population Density (sqmi)",
labels = labels) +  # Use custom range labels
geom_sf(data = uga, fill = NA, color = "black", linetype = 1, lwd = 0.5) +  # Use NA for fill to make the boundaries transparent
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
# Display the map
map_improved2
View(tracts17)
rm(tracts17)
tracts17 <-
get_acs(geography = "tract", variables = c("B25026_001E","B25058_001E"),
year=2017, state=42, county="Lancaster", geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E,
MedRent = B25058_001E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(area_sqFt = as.numeric(st_area(.))
tracts17 <-
get_acs(geography = "tract", variables = c("B25026_001E","B25058_001E"),
year=2017, state=42, county="Lancaster", geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E,
MedRent = B25058_001E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(area_sqFt = as.numeric(st_area(.)))
tracts17 <- tracts17 %>%
mutate(pop_density = (TotalPop/(area_sqFt/27878400)))
ggplot()+
geom_sf(data = tracts17, aes(fill = pop_density))+
geom_sf(data = uga, fill = "transparent", color = "black", linetype=5, lwd=0.5)+
scale_fill_distiller(palette = "Reds", direction = 1)+
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
breaks_quantiles <- classIntervals(tracts17$pop_density, n = 5, style = "quantile")
colors <- brewer.pal(n = 5, name = "YlGnBu")
labels <- paste0(formatC(breaks_quantiles$brks[-length(breaks_quantiles$brks)], format = "f", digits = 1, big.mark = ","),
" - ",
formatC(breaks_quantiles$brks[-1], format = "f", digits = 1, big.mark = ","))
# Create improved map with custom range labels for legend
map_improved2 <- ggplot() +
geom_sf(data = tracts17, aes(fill = cut(pop_density, breaks = breaks_quantiles$brks, include.lowest = TRUE)), color = "transparent") +
scale_fill_manual(values = colors,
name = "Population Density (sqmi)",
labels = labels) +  # Use custom range labels
geom_sf(data = uga, fill = NA, color = "black", linetype = 1, lwd = 0.5) +  # Use NA for fill to make the boundaries transparent
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
# Display the map
map_improved2
View(tracts17)
tracts17 <- tracts17 %>%
mutate(pop_density = (TotalPop/(area_sqFt/27878400)))
ggplot()+
geom_sf(data = tracts17, aes(fill = pop_density))+
geom_sf(data = uga, fill = "transparent", color = "black", linetype=5, lwd=0.5)+
scale_fill_distiller(palette = "Reds", direction = 1)+
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
breaks_quantiles <- classIntervals(tracts17$pop_density, n = 5, style = "quantile")
colors <- brewer.pal(n = 5, name = "YlGnBu")
labels <- paste0(formatC(breaks_quantiles$brks[-length(breaks_quantiles$brks)], format = "f", digits = 1, big.mark = ","),
" - ",
formatC(breaks_quantiles$brks[-1], format = "f", digits = 1, big.mark = ","))
# Create improved map with custom range labels for legend
map_improved2 <- ggplot() +
geom_sf(data = tracts17, aes(fill = cut(pop_density, breaks = breaks_quantiles$brks, include.lowest = TRUE)), color = "transparent") +
scale_fill_manual(values = colors,
name = "Population Density (per sqmi)",
labels = labels) +  # Use custom range labels
geom_sf(data = uga, fill = NA, color = "black", linetype = 1, lwd = 0.5) +  # Use NA for fill to make the boundaries transparent
labs(title = "Population Density of Census Tracts in Lancaster County", fill = "Population Density") +
theme_void()
# Display the map
map_improved2
# Assuming tracts17 and uga are loaded and properly formatted spatial dataframes
# Calculate quantiles for class breaks
breaks_quantiles2 <- classIntervals(tracts17$TotalPop, n = 5, style = "quantile")
# Define colors using ColorBrewer palette - matching the number of breaks
colors <- brewer.pal(n = 5, name = "YlGnBu")
# Generate custom labels showing the range of each class
labels <- paste0(formatC(breaks_quantiles2$brks[-length(breaks_quantiles2$brks)], format = "f", digits = 1, big.mark = ","),
" - ",
formatC(breaks_quantiles2$brks[-1], format = "f", digits = 1, big.mark = ","))
# Create improved map with custom range labels for legend
map_improved <- ggplot() +
geom_sf(data = tracts17, aes(fill = cut(TotalPop, breaks = breaks_quantiles2$brks, include.lowest = TRUE)), color = "lightgrey") +
scale_fill_manual(values = colors,
name = "Population",
labels = labels) +  # Use custom range labels
geom_sf(data = uga, fill = NA, color = "white", linetype = 1, lwd = 0.5) +  # Use NA for fill to make the boundaries transparent
labs(title = "Population of Census Tracts in Lancaster County") +
theme_void()
# Display the map
map_improved
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE)+
tm_title("Population of Census Tracts in Lancaster County")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, "Population of Census Tracts in Lancaster County")
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "lines", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, "Population of Census Tracts in Lancaster County")
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "line", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE)+
tm_title("Population of Census Tracts in Lancaster County")
breaks_quantiles <- classIntervals(tracts17$TotalPop, n = 6, style = "quantile")
colors <- brewer.pal(6, "YlGnBu")
# Create the thematic map
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n = 6, palette = "YlGnBu") +
tm_layout(frame = FALSE, legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "lines", col = "red", lwd = 1.5, labels = "Urban Growth Area")
breaks_quantiles <- classIntervals(tracts17$TotalPop, n = 6, style = "quantile")
colors <- brewer.pal(6, "YlGnBu")
# Create the thematic map
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n = 6, palette = "YlGnBu") +
tm_layout(frame = FALSE, legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "line", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE)+
tm_title("Population of Census Tracts in Lancaster County")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "cont", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "cont", border.col = NA, n = 6, palette = "YlGnBu") +
tm_layout(frame = FALSE, legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved
tracts17 <-
get_acs(geography = "tract", variables = c("B25026_001E","B25058_001E"),
year=2017, state=42, county="Lancaster", geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E,
MedRent = B25058_001E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(TotalPop = as.numeric(TotalPop),
area_sqFt = as.numeric(st_area(.)))
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "cont", border.col = NA, n = 6, palette = "YlGnBu") +
tm_layout(frame = FALSE, legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved
# Assuming tracts17 and uga are loaded and properly formatted spatial dataframes
install.packages(tmap, repos=c("https://r-tmap,r-universe.dev", "https://cloud,r-project.org"))
# Calculate quantiles for class breaks
breaks_quantiles2 <- classIntervals(tracts17$TotalPop, n = 5, style = "quantile")
# Define colors using ColorBrewer palette - matching the number of breaks
colors <- brewer.pal(n = 5, name = "YlGnBu")
# Generate custom labels showing the range of each class
labels <- paste0(formatC(breaks_quantiles2$brks[-length(breaks_quantiles2$brks)], format = "f", digits = 1, big.mark = ","),
" - ",
formatC(breaks_quantiles2$brks[-1], format = "f", digits = 1, big.mark = ","))
# Create improved map with custom range labels for legend
map_improved <- ggplot() +
geom_sf(data = tracts17, aes(fill = cut(TotalPop, breaks = breaks_quantiles$brks, include.lowest = TRUE)), color = "lightgrey") +
scale_fill_manual(values = colors,
name = "Population",
labels = labels) +  # Use custom range labels
geom_sf(data = uga, fill = NA, color = "white", linetype = 1, lwd = 0.5) +  # Use NA for fill to make the boundaries transparent
labs(title = "Population of Census Tracts in Lancaster County") +
theme_void()
# Display the map
map_improved
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "cont", border.col = NA, n = 6, palette = "YlGnBu") +
tm_layout(frame = FALSE, legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "lines", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quartile", border.col = NA, n = 6, palette = "YlGnBu") +
tm_layout(frame = FALSE, legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "lines", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE)+
tm_title("Population of Census Tracts in Lancaster County")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "lines", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County") +
scale_fill_brewer(palette = "BUBu")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County") +
scale_fill_brewer(palette = "BUPu")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County") +
scale_fill_brewer(palette = "YlGnBu")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County") +
scale_fill_distiller(palette = "YlGnBu")
tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "lines", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "lines", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "lines", col = "red", lwd = 1.5, labels = "Urban Growth Area")
install.packages(tmap, repos=c("https://r-tmap,r-universe.dev", "https://cloud,r-project.org"))
library(tmap)
install.packages("tmap", repos=c("https://r-tmap,r-universe.dev", "https://cloud,r-project.org"))
library(tmap)
install.packages("tmap", repos = c("https://r-tmap,r-universe.dev", "https://cloud,r-project.org"))
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "line", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved
uga_union <-
st_union(uga) %>%
st_buffer(1) %>%
st_sf()
outsideBuffer <-
st_buffer(uga_union, 660) %>%
st_difference(uga_union) %>%
mutate(Legend = "Outside")
insideBuffer <-
st_buffer(uga_union, dist = -660) %>%
st_difference(uga_union, .) %>%
mutate(Legend = "Inside")
bothBuffers <- rbind(insideBuffer, outsideBuffer)
ggplot() +
geom_sf(data = bothBuffers, aes(fill = Legend)) +
scale_fill_manual(values = c("#F8766D", "#00BFC4")) +
labs(title = "1/8mi Buffer Inside & Outside UGA") +
theme_void()
buffersAndTowns <-
st_intersection(st_make_valid(studyAreaTowns),
bothBuffers) %>%
filter(MUNI != "MOUNTVILLE BOROUGH")
View(buffersAndTowns)
View(buffersAndTowns)
detach("package:tmap", unload = TRUE)
remove.packages("tmap")
install.packages("tmap", repos=c("https://r-tmap,r-universe.dev", "https://cloud,r-project.org"))
library(tmap)
install.packages("tmap", repos=c("https://r-tmap.r-universe.dev", "https://cloud,r-project.org"))
library(tmap)
library(tmap)
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE, title = "Population of Census Tracts in Lancaster County")
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE)+
tm_title("Population of Census Tracts in Lancaster County")
library(tmap)
install.packages("leaflegend")
library(tmap)
map_improved <- tm_shape(tracts17) +
tm_polygons(fill = "TotalPop", style = "quantile", border.col = NA, n=6,title = "Population", palette = "YlGnBu" )+
tm_layout(frame = FALSE,legend.frame = FALSE)+
tm_title("Population of Census Tracts in Lancaster County")
#Now let's add the growth boundary
map_improved <- map_improved + tm_shape(uga)+
tm_borders(col = "red", lwd = 1.5)
# Add the UGA layer to the legend manually
map_improved <- map_improved +
tm_add_legend(type = "lines", col = "red", lwd = 1.5, labels = "Urban Growth Area")
map_improved
View(studyAreaTowns)
buffers_tracts <-
st_intersection(st_make_valid(tracts17),
bothBuffers)
View(buffers_tracts)
buffers_tracts <-
st_within(st_make_valid(tracts17),
insidebuffer)
buffers_tracts <-
st_within(st_make_valid(tracts17),
insideBuffer)
buffers_tracts <-
st_inside(st_make_valid(tracts17),
insideBuffer)
outsideBuffer <-
st_buffer(uga_union, 660) %>%
st_difference(uga_union) %>%
st_cast("POLYGON")%>%
mutate(Legend = "Outside")
insideBuffer <-
st_buffer(uga_union, dist = -660) %>%
st_difference(uga_union, .) %>%
st_cast("POLYGON")%>%
mutate(Legend = "Inside")
bothBuffers <- rbind(insideBuffer, outsideBuffer)
ggplot() +
geom_sf(data = bothBuffers, aes(fill = Legend)) +
scale_fill_manual(values = c("#F8766D", "#00BFC4")) +
labs(title = "1/8mi Buffer Inside & Outside UGA") +
theme_void()
Carteret <- read.csv("C:/Users/ztyuu/Documents/Spring2024/Research/Ghost Forest/County Parcel CSV/Carteret.csv")
library(tidyverse)
library(dplyr)
Carteret_1 <- Carteret %>%
select(PIN15, TOTAL_ACR,
LAND_VALUE, STRUC_VAL, OTHER_VAL,
Use_desc,
OWNER, MAIL_ST, MAIL_CITY, MAIL_STATE, MAIL_ZI5)
Carteret_1 <- Carteret_1 %>%
rename(PIN = PIN15, Acres = TOTAL_ACR,
Zoning = Use_desc,
Land_Val = LAND_VALUE, Struc_Val = STRUC_VAL, Other_Val = OTHER_VAL,
Owner1 = OWNER, Mail_St = MAIL_ST, Mail_City = MAIL_CITY, Mail_State = MAIL_STATE,
Mail_ZIP = MAIL_ZI5)
Carteret_1 <- mutate(Carteret_1, Acres = as.numeric(Acres),
Land_Val = as.numeric(Land_Val), Struc_Val = as.numeric(Struc_Val),
Other_Val = as.numeric(Other_Val),
PIN = as.character(PIN),
Mail_ZIP = as.character(Mail_ZIP))%>%
mutate(Parcel_County = "Carteret")
View(Carteret)
Carteret.sf <- st_read("Carteret_CarteretCountyInfoTechDept/Tax_Parcel_Data.shp")
Carteret.sf <- st_read("Carteret_CarteretCountyInfoTechDept/Tax_Parcel_Data.shp")
Carteret.sf <- st_read("Carteret_CarteretCountyInfoTechDept/Tax_Parcel_Data.shp")
Carteret_uni <- Carteret_1 %>%
filter(!Acres == 0.000)
Carteret.sf <- st_read("Carteret_CarteretCountyInfoTechDept/Tax_Parcel_Data.shp")
library(sf)
Carteret.sf <- st_read("Carteret_CarteretCountyInfoTechDept/Tax_Parcel_Data.shp")
